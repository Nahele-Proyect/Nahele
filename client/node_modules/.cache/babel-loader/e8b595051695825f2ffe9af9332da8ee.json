{"ast":null,"code":"var _jsxFileName = \"/home/andres/Escritorio/proyecto3/cliente/src/components/Form/FormModal.js\";\nimport React, { Component } from 'react';\nimport request from 'request';\nimport { withCookies } from \"react-cookie\";\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport io from 'socket.io-client';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle } from '@fortawesome/free-regular-svg-icons';\nimport { faTimesCircle } from '@fortawesome/free-regular-svg-icons';\nimport Modal from './modal';\nimport Inputbox from './inputbox';\nimport Buttonbox from './buttonbox';\nimport auramaze from \"../static/logo-white-frame.svg\";\nimport { API_ENDPOINT, API_URL } from \"../common\";\nimport { validateEmail, validatePassword } from \"../utils\";\nconst socket = io(API_URL);\nconst inputboxStyle = {\n  margin: '20px 0',\n  width: '100%'\n};\nconst buttonboxStyle = {\n  margin: '20px 0',\n  width: '100%',\n  height: 50,\n  borderRadius: 5,\n  whiteSpace: 'nowrap'\n};\nconst auramazeButtonboxStyle = Object.assign({\n  backgroundColor: '#cdcdcd',\n  color: '#666666'\n}, buttonboxStyle);\n\nclass SignupModal extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      auramazeProcessing: false,\n      displayNameMessage: false,\n      displayEmailMessage: false,\n      displayPasswordMessage: false,\n      emailExist: false\n    };\n    this.signup = this.signup.bind(this);\n  }\n\n  signup() {\n    this.setState({\n      auramazeProcessing: true\n    });\n    request.post({\n      url: `${API_ENDPOINT}/auth/signup`,\n      body: {\n        name: {\n          default: this.state.name\n        },\n        email: this.state.email,\n        password: this.state.password\n      },\n      json: true\n    }, (error, response, body) => {\n      if (response && response.statusCode === 200) {\n        const {\n          cookies\n        } = this.props;\n\n        if (body.id) {\n          cookies.set('id', body.id, {\n            path: '/'\n          });\n        } else {\n          cookies.remove('id', {\n            path: '/'\n          });\n        }\n\n        if (body.username) {\n          cookies.set('username', body.username, {\n            path: '/'\n          });\n        } else {\n          cookies.remove('username', {\n            path: '/'\n          });\n        }\n\n        if (body.token) {\n          cookies.set('token', body.token, {\n            path: '/'\n          });\n        } else {\n          cookies.remove('token', {\n            path: '/'\n          });\n        }\n\n        this.setState({\n          id: '',\n          password: '',\n          auramazeProcessing: false\n        });\n        window.location.reload();\n      } else if (response.statusCode === 400) {\n        if (body.code === 'EMAIL_EXIST') {\n          this.setState({\n            emailExist: true\n          });\n        }\n\n        this.setState({\n          auramazeProcessing: false\n        });\n      }\n    });\n  }\n\n  render() {\n    const {\n      intl\n    } = this.props;\n    return React.createElement(Modal, Object.assign({}, this.props, {\n      style: {\n        width: '95%',\n        maxWidth: 800\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"signup-modal-content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, React.createElement(\"p\", {\n      className: \"font-size-xl\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"app.signup.title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    })), React.createElement(Inputbox, {\n      style: inputboxStyle,\n      value: this.state.name,\n      type: \"text\",\n      name: \"name\",\n      placeholder: intl.formatMessage({\n        id: 'app.signup.name'\n      }),\n      onChange: value => {\n        this.setState({\n          name: value\n        });\n      },\n      onBlur: () => {\n        this.setState({\n          displayNameMessage: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), this.state.displayNameMessage && React.createElement(\"div\", {\n      className: \"message-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, this.state.name.length > 0 && React.createElement(\"div\", {\n      className: \"font-size-xs success-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faCheckCircle,\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107\n      },\n      __self: this\n    }), \" \", React.createElement(FormattedMessage, {\n      id: \"app.signup.name_valid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    })), this.state.name.length === 0 && React.createElement(\"div\", {\n      className: \"font-size-xs error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faTimesCircle,\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), \" \", React.createElement(FormattedMessage, {\n      id: \"app.signup.name_required\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 115\n      },\n      __self: this\n    }))), React.createElement(Inputbox, {\n      style: inputboxStyle,\n      value: this.state.email,\n      type: \"text\",\n      name: \"email\",\n      placeholder: intl.formatMessage({\n        id: 'app.signup.email'\n      }),\n      onChange: value => {\n        this.setState({\n          email: value,\n          emailExist: false\n        });\n      },\n      onBlur: () => {\n        this.setState({\n          displayEmailMessage: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }), this.state.displayEmailMessage && React.createElement(\"div\", {\n      className: \"message-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130\n      },\n      __self: this\n    }, validateEmail(this.state.email) && !this.state.emailExist && React.createElement(\"div\", {\n      className: \"font-size-xs success-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faCheckCircle,\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), \" \", React.createElement(FormattedMessage, {\n      id: \"app.signup.email_valid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135\n      },\n      __self: this\n    })), !validateEmail(this.state.email) && React.createElement(\"div\", {\n      className: \"font-size-xs error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faTimesCircle,\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 137\n      },\n      __self: this\n    }), \" \", React.createElement(FormattedMessage, {\n      id: \"app.signup.email_invalid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140\n      },\n      __self: this\n    })), this.state.emailExist && React.createElement(\"div\", {\n      className: \"font-size-xs error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faTimesCircle,\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 141\n      },\n      __self: this\n    }), \" \", React.createElement(FormattedMessage, {\n      id: \"app.signup.email_exists\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 144\n      },\n      __self: this\n    }))), React.createElement(Inputbox, {\n      style: inputboxStyle,\n      value: this.state.password,\n      type: \"password\",\n      name: \"password\",\n      placeholder: intl.formatMessage({\n        id: 'app.signup.password'\n      }),\n      onChange: value => {\n        this.setState({\n          password: value\n        });\n      },\n      onBlur: () => {\n        this.setState({\n          displayPasswordMessage: true\n        });\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }), this.state.displayPasswordMessage && React.createElement(\"div\", {\n      className: \"message-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159\n      },\n      __self: this\n    }, validatePassword(this.state.password) ? React.createElement(\"div\", {\n      className: \"font-size-xs success-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faCheckCircle,\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161\n      },\n      __self: this\n    }), \" \", React.createElement(FormattedMessage, {\n      id: \"app.signup.password_valid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164\n      },\n      __self: this\n    })) : React.createElement(\"div\", {\n      className: \"font-size-xs error-message\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }, React.createElement(FontAwesomeIcon, {\n      icon: faTimesCircle,\n      size: \"sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165\n      },\n      __self: this\n    }), \" \", React.createElement(FormattedMessage, {\n      id: \"app.signup.password_longer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      style: {\n        width: '100%',\n        height: 5\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170\n      },\n      __self: this\n    }), React.createElement(Buttonbox, {\n      style: auramazeButtonboxStyle,\n      processing: this.state.auramazeProcessing,\n      onClick: () => {\n        this.signup();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 171\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      style: {\n        color: '#666666',\n        display: 'inlineBlock',\n        margin: '0 10px'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178\n      },\n      __self: this\n    }, React.createElement(\"img\", {\n      src: auramaze,\n      alt: \"auramaze\",\n      style: {\n        width: 25,\n        height: 25,\n        marginRight: 10,\n        verticalAlign: 'middle'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179\n      },\n      __self: this\n    }), React.createElement(\"span\", {\n      style: {\n        display: 'inlineBlock',\n        verticalAlign: 'middle'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181\n      },\n      __self: this\n    }, React.createElement(FormattedMessage, {\n      id: \"app.signup.auramaze\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 185\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default withCookies(injectIntl(SignupModal));","map":{"version":3,"sources":["/home/andres/Escritorio/proyecto3/cliente/src/components/Form/FormModal.js"],"names":["React","Component","request","withCookies","injectIntl","FormattedMessage","io","FontAwesomeIcon","faCheckCircle","faTimesCircle","Modal","Inputbox","Buttonbox","API_ENDPOINT","API_URL","validateEmail","validatePassword","socket","inputboxStyle","margin","width","buttonboxStyle","height","borderRadius","whiteSpace","auramazeButtonboxStyle","Object","assign","backgroundColor","color","SignupModal","constructor","props","state","name","email","password","auramazeProcessing","displayNameMessage","displayEmailMessage","displayPasswordMessage","emailExist","signup","bind","setState","post","url","body","default","json","error","response","statusCode","cookies","id","set","path","remove","username","token","window","location","reload","code","render","intl","maxWidth","formatMessage","value","length","display","auramaze","marginRight","verticalAlign"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,OAAP,MAAoB,SAApB;AACA,SAASC,WAAT,QAA4B,cAA5B;AACA,SAASC,UAAT,EAAqBC,gBAArB,QAA6C,YAA7C;AACA,OAAOC,EAAP,MAAe,kBAAf;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,SAASC,aAAT,QAA8B,qCAA9B;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;;AAEA,SAASC,YAAT,EAAuBC,OAAvB,QAAsC,WAAtC;AACA,SAASC,aAAT,EAAwBC,gBAAxB,QAAgD,UAAhD;AAEA,MAAMC,MAAM,GAAGX,EAAE,CAACQ,OAAD,CAAjB;AACA,MAAMI,aAAa,GAAG;AAAEC,EAAAA,MAAM,EAAE,QAAV;AAAoBC,EAAAA,KAAK,EAAE;AAA3B,CAAtB;AACA,MAAMC,cAAc,GAAG;AACnBF,EAAAA,MAAM,EAAE,QADW;AAEnBC,EAAAA,KAAK,EAAE,MAFY;AAGnBE,EAAAA,MAAM,EAAE,EAHW;AAInBC,EAAAA,YAAY,EAAE,CAJK;AAKnBC,EAAAA,UAAU,EAAE;AALO,CAAvB;AAOA,MAAMC,sBAAsB,GAAGC,MAAM,CAACC,MAAP,CAAc;AACzCC,EAAAA,eAAe,EAAE,SADwB;AAEzCC,EAAAA,KAAK,EAAE;AAFkC,CAAd,EAG5BR,cAH4B,CAA/B;;AAKA,MAAMS,WAAN,SAA0B7B,SAA1B,CAAoC;AAChC8B,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,EADG;AAETC,MAAAA,KAAK,EAAE,EAFE;AAGTC,MAAAA,QAAQ,EAAE,EAHD;AAITC,MAAAA,kBAAkB,EAAE,KAJX;AAKTC,MAAAA,kBAAkB,EAAE,KALX;AAMTC,MAAAA,mBAAmB,EAAE,KANZ;AAOTC,MAAAA,sBAAsB,EAAE,KAPf;AAQTC,MAAAA,UAAU,EAAE;AARH,KAAb;AAUA,SAAKC,MAAL,GAAc,KAAKA,MAAL,CAAYC,IAAZ,CAAiB,IAAjB,CAAd;AACH;;AAEDD,EAAAA,MAAM,GAAG;AACL,SAAKE,QAAL,CAAc;AAAEP,MAAAA,kBAAkB,EAAE;AAAtB,KAAd;AACAnC,IAAAA,OAAO,CAAC2C,IAAR,CAAa;AACTC,MAAAA,GAAG,EAAG,GAAEjC,YAAa,cADZ;AAETkC,MAAAA,IAAI,EAAE;AAAEb,QAAAA,IAAI,EAAE;AAAEc,UAAAA,OAAO,EAAE,KAAKf,KAAL,CAAWC;AAAtB,SAAR;AAAsCC,QAAAA,KAAK,EAAE,KAAKF,KAAL,CAAWE,KAAxD;AAA+DC,QAAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWG;AAApF,OAFG;AAGTa,MAAAA,IAAI,EAAE;AAHG,KAAb,EAIG,CAACC,KAAD,EAAQC,QAAR,EAAkBJ,IAAlB,KAA2B;AAC1B,UAAII,QAAQ,IAAIA,QAAQ,CAACC,UAAT,KAAwB,GAAxC,EAA6C;AACzC,cAAM;AAAEC,UAAAA;AAAF,YAAc,KAAKrB,KAAzB;;AACA,YAAIe,IAAI,CAACO,EAAT,EAAa;AACTD,UAAAA,OAAO,CAACE,GAAR,CAAY,IAAZ,EAAkBR,IAAI,CAACO,EAAvB,EAA2B;AAAEE,YAAAA,IAAI,EAAE;AAAR,WAA3B;AACH,SAFD,MAEO;AACHH,UAAAA,OAAO,CAACI,MAAR,CAAe,IAAf,EAAqB;AAAED,YAAAA,IAAI,EAAE;AAAR,WAArB;AACH;;AACD,YAAIT,IAAI,CAACW,QAAT,EAAmB;AACfL,UAAAA,OAAO,CAACE,GAAR,CAAY,UAAZ,EAAwBR,IAAI,CAACW,QAA7B,EAAuC;AAAEF,YAAAA,IAAI,EAAE;AAAR,WAAvC;AACH,SAFD,MAEO;AACHH,UAAAA,OAAO,CAACI,MAAR,CAAe,UAAf,EAA2B;AAAED,YAAAA,IAAI,EAAE;AAAR,WAA3B;AACH;;AACD,YAAIT,IAAI,CAACY,KAAT,EAAgB;AACZN,UAAAA,OAAO,CAACE,GAAR,CAAY,OAAZ,EAAqBR,IAAI,CAACY,KAA1B,EAAiC;AAAEH,YAAAA,IAAI,EAAE;AAAR,WAAjC;AACH,SAFD,MAEO;AACHH,UAAAA,OAAO,CAACI,MAAR,CAAe,OAAf,EAAwB;AAAED,YAAAA,IAAI,EAAE;AAAR,WAAxB;AACH;;AACD,aAAKZ,QAAL,CAAc;AAAEU,UAAAA,EAAE,EAAE,EAAN;AAAUlB,UAAAA,QAAQ,EAAE,EAApB;AAAwBC,UAAAA,kBAAkB,EAAE;AAA5C,SAAd;AACAuB,QAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACH,OAnBD,MAmBO,IAAIX,QAAQ,CAACC,UAAT,KAAwB,GAA5B,EAAiC;AACpC,YAAIL,IAAI,CAACgB,IAAL,KAAc,aAAlB,EAAiC;AAC7B,eAAKnB,QAAL,CAAc;AAAEH,YAAAA,UAAU,EAAE;AAAd,WAAd;AACH;;AACD,aAAKG,QAAL,CAAc;AAAEP,UAAAA,kBAAkB,EAAE;AAAtB,SAAd;AACH;AACJ,KA9BD;AA+BH;;AAED2B,EAAAA,MAAM,GAAG;AACL,UAAM;AAAEC,MAAAA;AAAF,QAAW,KAAKjC,KAAtB;AACA,WACI,oBAAC,KAAD,oBAAW,KAAKA,KAAhB;AAAuB,MAAA,KAAK,EAAE;AAC1BZ,QAAAA,KAAK,EAAE,KADmB;AAE1B8C,QAAAA,QAAQ,EAAE;AAFgB,OAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAII;AAAK,MAAA,SAAS,EAAC,sBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAG,MAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,kBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII,oBAAC,QAAD;AACI,MAAA,KAAK,EAAEhD,aADX;AAEI,MAAA,KAAK,EAAE,KAAKe,KAAL,CAAWC,IAFtB;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,IAAI,EAAC,MAJT;AAKI,MAAA,WAAW,EAAE+B,IAAI,CAACE,aAAL,CAAmB;AAAEb,QAAAA,EAAE,EAAE;AAAN,OAAnB,CALjB;AAMI,MAAA,QAAQ,EAAGc,KAAD,IAAW;AACjB,aAAKxB,QAAL,CAAc;AAAEV,UAAAA,IAAI,EAAEkC;AAAR,SAAd;AACH,OARL;AASI,MAAA,MAAM,EAAE,MAAM;AACV,aAAKxB,QAAL,CAAc;AAAEN,UAAAA,kBAAkB,EAAE;AAAtB,SAAd;AACH,OAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJJ,EAiBK,KAAKL,KAAL,CAAWK,kBAAX,IAAiC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAC7B,KAAKL,KAAL,CAAWC,IAAX,CAAgBmC,MAAhB,GAAyB,CAAzB,IACG;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8C,oBAAC,eAAD;AAC1C,MAAA,IAAI,EAAE7D,aADoC;AAE1C,MAAA,IAAI,EAAC,IAFqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9C,OAGG,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,uBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CAF0B,EAM7B,KAAKyB,KAAL,CAAWC,IAAX,CAAgBmC,MAAhB,KAA2B,CAA3B,IACG;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4C,oBAAC,eAAD;AACxC,MAAA,IAAI,EAAE5D,aADkC;AAExC,MAAA,IAAI,EAAC,IAFmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5C,OAGG,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,0BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CAP0B,CAjBtC,EA6BI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAES,aADX;AAEI,MAAA,KAAK,EAAE,KAAKe,KAAL,CAAWE,KAFtB;AAGI,MAAA,IAAI,EAAC,MAHT;AAII,MAAA,IAAI,EAAC,OAJT;AAKI,MAAA,WAAW,EAAE8B,IAAI,CAACE,aAAL,CAAmB;AAAEb,QAAAA,EAAE,EAAE;AAAN,OAAnB,CALjB;AAMI,MAAA,QAAQ,EAAGc,KAAD,IAAW;AACjB,aAAKxB,QAAL,CAAc;AAAET,UAAAA,KAAK,EAAEiC,KAAT;AAAgB3B,UAAAA,UAAU,EAAE;AAA5B,SAAd;AACH,OARL;AASI,MAAA,MAAM,EAAE,MAAM;AACV,aAAKG,QAAL,CAAc;AAAEL,UAAAA,mBAAmB,EAAE;AAAvB,SAAd;AACH,OAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BJ,EA0CK,KAAKN,KAAL,CAAWM,mBAAX,IAAkC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAC9BxB,aAAa,CAAC,KAAKkB,KAAL,CAAWE,KAAZ,CAAb,IAAmC,CAAC,KAAKF,KAAL,CAAWQ,UAA/C,IACG;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8C,oBAAC,eAAD;AAC1C,MAAA,IAAI,EAAEjC,aADoC;AAE1C,MAAA,IAAI,EAAC,IAFqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9C,OAGG,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,wBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CAF2B,EAM9B,CAACO,aAAa,CAAC,KAAKkB,KAAL,CAAWE,KAAZ,CAAd,IACG;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4C,oBAAC,eAAD;AACxC,MAAA,IAAI,EAAE1B,aADkC;AAExC,MAAA,IAAI,EAAC,IAFmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5C,OAGG,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,0BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CAP2B,EAW9B,KAAKwB,KAAL,CAAWQ,UAAX,IAAyB;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4C,oBAAC,eAAD;AAClE,MAAA,IAAI,EAAEhC,aAD4D;AAElE,MAAA,IAAI,EAAC,IAF6D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5C,OAGvB,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,yBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHuB,CAXK,CA1CvC,EA0DI,oBAAC,QAAD;AACI,MAAA,KAAK,EAAES,aADX;AAEI,MAAA,KAAK,EAAE,KAAKe,KAAL,CAAWG,QAFtB;AAGI,MAAA,IAAI,EAAC,UAHT;AAII,MAAA,IAAI,EAAC,UAJT;AAKI,MAAA,WAAW,EAAE6B,IAAI,CAACE,aAAL,CAAmB;AAAEb,QAAAA,EAAE,EAAE;AAAN,OAAnB,CALjB;AAMI,MAAA,QAAQ,EAAGc,KAAD,IAAW;AACjB,aAAKxB,QAAL,CAAc;AAAER,UAAAA,QAAQ,EAAEgC;AAAZ,SAAd;AACH,OARL;AASI,MAAA,MAAM,EAAE,MAAM;AACV,aAAKxB,QAAL,CAAc;AAAEJ,UAAAA,sBAAsB,EAAE;AAA1B,SAAd;AACH,OAXL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1DJ,EAuEK,KAAKP,KAAL,CAAWO,sBAAX,IAAqC;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACjCxB,gBAAgB,CAAC,KAAKiB,KAAL,CAAWG,QAAZ,CAAhB,GACG;AAAK,MAAA,SAAS,EAAC,8BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8C,oBAAC,eAAD;AAC1C,MAAA,IAAI,EAAE5B,aADoC;AAE1C,MAAA,IAAI,EAAC,IAFqC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA9C,OAGG,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,2BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CADH,GAKG;AAAK,MAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4C,oBAAC,eAAD;AACxC,MAAA,IAAI,EAAEC,aADkC;AAExC,MAAA,IAAI,EAAC,IAFmC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5C,OAGG,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,4BAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHH,CAN8B,CAvE1C,EAkFI;AAAK,MAAA,KAAK,EAAE;AAAEW,QAAAA,KAAK,EAAE,MAAT;AAAiBE,QAAAA,MAAM,EAAE;AAAzB,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAlFJ,EAmFI,oBAAC,SAAD;AACI,MAAA,KAAK,EAAEG,sBADX;AAEI,MAAA,UAAU,EAAE,KAAKQ,KAAL,CAAWI,kBAF3B;AAGI,MAAA,OAAO,EAAE,MAAM;AACX,aAAKK,MAAL;AACH,OALL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAOI;AAAK,MAAA,KAAK,EAAE;AAAEb,QAAAA,KAAK,EAAE,SAAT;AAAoByC,QAAAA,OAAO,EAAE,aAA7B;AAA4CnD,QAAAA,MAAM,EAAE;AAApD,OAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,GAAG,EAAEoD,QAAV;AAAoB,MAAA,GAAG,EAAC,UAAxB;AACI,MAAA,KAAK,EAAE;AAAEnD,QAAAA,KAAK,EAAE,EAAT;AAAaE,QAAAA,MAAM,EAAE,EAArB;AAAyBkD,QAAAA,WAAW,EAAE,EAAtC;AAA0CC,QAAAA,aAAa,EAAE;AAAzD,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAGI;AACI,MAAA,KAAK,EAAE;AACHH,QAAAA,OAAO,EAAE,aADN;AAEHG,QAAAA,aAAa,EAAE;AAFZ,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIO,oBAAC,gBAAD;AAAkB,MAAA,EAAE,EAAC,qBAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJP,CAHJ,CAPJ,CAnFJ,CAJJ,CADJ;AA4GH;;AAjK+B;;AAoKpC,eAAetE,WAAW,CAACC,UAAU,CAAC0B,WAAD,CAAX,CAA1B","sourcesContent":["import React, { Component } from 'react';\nimport request from 'request';\nimport { withCookies } from \"react-cookie\";\nimport { injectIntl, FormattedMessage } from 'react-intl';\nimport io from 'socket.io-client'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckCircle } from '@fortawesome/free-regular-svg-icons';\nimport { faTimesCircle } from '@fortawesome/free-regular-svg-icons';\nimport Modal from './modal';\nimport Inputbox from './inputbox';\nimport Buttonbox from './buttonbox';\nimport auramaze from '../static/logo-white-frame.svg';\nimport { API_ENDPOINT, API_URL } from \"../common\";\nimport { validateEmail, validatePassword } from \"../utils\";\n\nconst socket = io(API_URL);\nconst inputboxStyle = { margin: '20px 0', width: '100%' };\nconst buttonboxStyle = {\n    margin: '20px 0',\n    width: '100%',\n    height: 50,\n    borderRadius: 5,\n    whiteSpace: 'nowrap'\n};\nconst auramazeButtonboxStyle = Object.assign({\n    backgroundColor: '#cdcdcd',\n    color: '#666666'\n}, buttonboxStyle);\n\nclass SignupModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            auramazeProcessing: false,\n            displayNameMessage: false,\n            displayEmailMessage: false,\n            displayPasswordMessage: false,\n            emailExist: false\n        };\n        this.signup = this.signup.bind(this);\n    }\n\n    signup() {\n        this.setState({ auramazeProcessing: true });\n        request.post({\n            url: `${API_ENDPOINT}/auth/signup`,\n            body: { name: { default: this.state.name }, email: this.state.email, password: this.state.password },\n            json: true\n        }, (error, response, body) => {\n            if (response && response.statusCode === 200) {\n                const { cookies } = this.props;\n                if (body.id) {\n                    cookies.set('id', body.id, { path: '/' });\n                } else {\n                    cookies.remove('id', { path: '/' });\n                }\n                if (body.username) {\n                    cookies.set('username', body.username, { path: '/' });\n                } else {\n                    cookies.remove('username', { path: '/' });\n                }\n                if (body.token) {\n                    cookies.set('token', body.token, { path: '/' });\n                } else {\n                    cookies.remove('token', { path: '/' });\n                }\n                this.setState({ id: '', password: '', auramazeProcessing: false });\n                window.location.reload();\n            } else if (response.statusCode === 400) {\n                if (body.code === 'EMAIL_EXIST') {\n                    this.setState({ emailExist: true });\n                }\n                this.setState({ auramazeProcessing: false });\n            }\n        });\n    }\n\n    render() {\n        const { intl } = this.props;\n        return (\n            <Modal {...this.props} style={{\n                width: '95%',\n                maxWidth: 800\n            }}>\n                <div className=\"signup-modal-content\">\n                    <p className=\"font-size-xl\">\n                        <FormattedMessage id=\"app.signup.title\" />\n                    </p>\n                    <Inputbox\n                        style={inputboxStyle}\n                        value={this.state.name}\n                        type=\"text\"\n                        name=\"name\"\n                        placeholder={intl.formatMessage({ id: 'app.signup.name' })}\n                        onChange={(value) => {\n                            this.setState({ name: value })\n                        }}\n                        onBlur={() => {\n                            this.setState({ displayNameMessage: true })\n                        }}\n                    />\n                    {this.state.displayNameMessage && <div className=\"message-container\">\n                        {this.state.name.length > 0 &&\n                            <div className=\"font-size-xs success-message\"><FontAwesomeIcon\n                                icon={faCheckCircle}\n                                size=\"sm\"\n                            /> <FormattedMessage id=\"app.signup.name_valid\" /></div>}\n                        {this.state.name.length === 0 &&\n                            <div className=\"font-size-xs error-message\"><FontAwesomeIcon\n                                icon={faTimesCircle}\n                                size=\"sm\"\n                            /> <FormattedMessage id=\"app.signup.name_required\" /></div>}\n                    </div>}\n                    <Inputbox\n                        style={inputboxStyle}\n                        value={this.state.email}\n                        type=\"text\"\n                        name=\"email\"\n                        placeholder={intl.formatMessage({ id: 'app.signup.email' })}\n                        onChange={(value) => {\n                            this.setState({ email: value, emailExist: false })\n                        }}\n                        onBlur={() => {\n                            this.setState({ displayEmailMessage: true })\n                        }}\n                    />\n                    {this.state.displayEmailMessage && <div className=\"message-container\">\n                        {validateEmail(this.state.email) && !this.state.emailExist &&\n                            <div className=\"font-size-xs success-message\"><FontAwesomeIcon\n                                icon={faCheckCircle}\n                                size=\"sm\"\n                            /> <FormattedMessage id=\"app.signup.email_valid\" /></div>}\n                        {!validateEmail(this.state.email) &&\n                            <div className=\"font-size-xs error-message\"><FontAwesomeIcon\n                                icon={faTimesCircle}\n                                size=\"sm\"\n                            /> <FormattedMessage id=\"app.signup.email_invalid\" /></div>}\n                        {this.state.emailExist && <div className=\"font-size-xs error-message\"><FontAwesomeIcon\n                            icon={faTimesCircle}\n                            size=\"sm\"\n                        /> <FormattedMessage id=\"app.signup.email_exists\" /></div>}\n                    </div>}\n                    <Inputbox\n                        style={inputboxStyle}\n                        value={this.state.password}\n                        type=\"password\"\n                        name=\"password\"\n                        placeholder={intl.formatMessage({ id: 'app.signup.password' })}\n                        onChange={(value) => {\n                            this.setState({ password: value })\n                        }}\n                        onBlur={() => {\n                            this.setState({ displayPasswordMessage: true })\n                        }}\n                    />\n                    {this.state.displayPasswordMessage && <div className=\"message-container\">\n                        {validatePassword(this.state.password) ?\n                            <div className=\"font-size-xs success-message\"><FontAwesomeIcon\n                                icon={faCheckCircle}\n                                size=\"sm\"\n                            /> <FormattedMessage id=\"app.signup.password_valid\" /></div> :\n                            <div className=\"font-size-xs error-message\"><FontAwesomeIcon\n                                icon={faTimesCircle}\n                                size=\"sm\"\n                            /> <FormattedMessage id=\"app.signup.password_longer\" /></div>}\n                    </div>}\n                    <div style={{ width: '100%', height: 5 }} />\n                    <Buttonbox\n                        style={auramazeButtonboxStyle}\n                        processing={this.state.auramazeProcessing}\n                        onClick={() => {\n                            this.signup();\n                        }}\n                    >\n                        <div style={{ color: '#666666', display: 'inlineBlock', margin: '0 10px' }}>\n                            <img src={auramaze} alt=\"auramaze\"\n                                style={{ width: 25, height: 25, marginRight: 10, verticalAlign: 'middle' }} />\n                            <span\n                                style={{\n                                    display: 'inlineBlock',\n                                    verticalAlign: 'middle'\n                                }}><FormattedMessage id=\"app.signup.auramaze\" /></span>\n                        </div>\n                    </Buttonbox>\n                </div>\n            </Modal>\n        );\n    }\n}\n\nexport default withCookies(injectIntl(SignupModal))"]},"metadata":{},"sourceType":"module"}